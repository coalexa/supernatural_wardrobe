<!-- 
Citation for the following html and jinja2 code:
Date: 10/27/2022
Adapted from: GitHub Flask Starter App
Source URL: https://github.com/osu-cs340-ecampus/flask-starter-app/blob/master/bsg_people_app/templates/edit_people.j2
-->

<html>
<head>
	<title>Edit Inventory</title>
    <link href="../static/stylesheet.css" rel="stylesheet" type="text/css" />
</head>

<body>
    <div>
        <h1> Edit Inventory:</h1>
        <table class="edit-table">
            <!-- Access data tuple passed from app.py -->
            {% if data %}
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Stock</th>
                        <th>Description</th>
                        <th>Costume Name</th>
                    </tr>

                <tbody>
                    <!-- Now, iterate through every item in data -->
                    {% for item in data %}
                    <tr>
                        <!-- Then iterate through every key in the current item dictionary -->
                        {% for key in item.keys() %}

                        <!-- Create a <td> element with the value of that key in it -->
                        <td>{{item[key]}}</td> 
                        {% endfor %}
                    </tr>
                    {% endfor %}
            {% endif %}
        </table><br>
    </div>

    <div id="edit">
        <!-- form to edit data in inventory-->
        <form id="editInventory" action="/edit_inventory/{{data[0].inventory_id}}" method="post">
            <fieldset>
            <legend><strong>Edit Inventory </strong></legend>
                <!-- We can preset form inputs to match attributes currently stored for 'id' of inventory to be updated via value= and accessing our passed data tuple -->
                <!-- Create hidden form input to store the passed 'id' of the inventory we are editing so we can access it easily in our 'POST' method in our app.py -->
                <input type="hidden" value="{{data[0].inventory_id}}" class="form-control" id="inventory_id" name="inventory_id" required>

                <label for="stock">Stock:</label><br>
                <input type="number" class="form-control" id="stock" name="stock" pattern="[0-9]+([\.,]{1,}" value="{{data[0].stock}}"><br>

                <label for="description">Inventory Description:</label><br>
                <input type="text" class="form-control" id="inventory_description" name="inventory_description" pattern="[A-Za-z0-9\W+]{1,}" value="{{data[0].inventory_description}}" required><br>

                <label for="costume">Costume:</label><br>
                <select class="form-control" name="costume_id" id="costume_id">
                <!-- Access the costumes tuple passed from app.py -->
                {% if data[0].costume_id != None %}
                    <option value="0">None</option>
                    {% for costume in costumes %}
                        {% if costume['costume_id'] == data[0].costume_id %}
                            <option value="{{ costume['costume_id'] }}" selected> {{costume['costume_name']}}</option>
                        {% else %}
                            <option value="{{ costume['costume_id'] }}" disabled> {{costume['costume_name']}}</option>
                        {% endif %}
                    {% endfor %}
                {% else %}
                    <option value="0" selected>None</option>
                    {% for costume in costumes %}
                        <option value="{{ costume['costume_id'] }}"> {{costume['costume_name']}}</option>
                    {% endfor %}
                {% endif %}
                </select><br>

                <input type="submit" value="Edit Inventory" name="Edit_Inventory" class="btn btn-primary">
                <a href='/inventory'><input class="btn" type="button" value="Cancel"></a>
            </fieldset>
        </form>
    </div>

    <footer><p3> &#169;  2022 Alexa Castro & Carolina Rodriguez</p3></footer>

</body>
</html>